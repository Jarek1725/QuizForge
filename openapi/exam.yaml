openapi: 3.0.0
info:
  title: Exam API
  version: 1.0.0
  description: API for managing exams

servers:
  - url: /api
    description: Local server
paths:
  /api/exams:
    get:
      tags:
        - Exam
      summary: Retrieves a list of exams
      operationId: getExams
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter by category name
        - in: query
          name: university
          schema:
            type: string
          description: Filter by university name
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Number of exams to return
      responses:
        "200":
          description: List of exams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExamDTO"
    post:
      x-principal: 'true'
      tags:
        - Exam
      summary: Creates a new exam
      operationId: createExam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExamDTO"
      responses:
        "201":
          description: Exam created
          content:
            application/json:
              schema:
                type: integer
                format: int64

  /api/users/{userId}/attempts:
    get:
      tags:
        - Attempt
      summary: Retrieves the last N attempts of a user
      operationId: getUserLastAttempts
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: The number of last attempts to retrieve (default is 5)
          required: false
          schema:
            type: integer
            default: 5
      responses:
        "200":
          description: A list of the user's last attempts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttemptDTO"
        "404":
          description: User not found or no attempts found

  /api/exams/{examId}:
    get:
      tags:
        - Exam
      summary: Retrieves an exam by ID
      operationId: getExamById
      parameters:
        - name: examId
          in: path
          description: The ID of the exam
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Exam details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamDetailsDTO"
        "404":
          description: Exam not found

components:
  schemas:
    ExamDetailsDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        categories:
          type: array
          items:
            type: string
        university:
          type: string
        pointsNumber:
          type: integer
        questions:
            type: array
            items:
                $ref: "#/components/schemas/QuestionDetailsDTO"

    QuestionDetailsDTO:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        score:
          type: integer
        type:
          type: string
          enum:
            - MULTIPLE_CHOICE
            - SINGLE_CHOICE
        answers:
          type: array
          items:
            $ref: "#/components/schemas/AnswerDetailsDTO"

    AnswerDetailsDTO:
          type: object
          properties:
            id:
              type: integer
            text:
              type: string
            isCorrect:
              type: boolean

    ExamDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        categories:
          type: array
          items:
            type: string
        university:
          type: string
        pointsNumber:
          type: integer

    CreateExamDTO:
      type: object
      properties:
        name:
          type: string
        categories:
          type: array
          items:
            type: string
        university:
          type: string
        percentageToPass:
            type: integer
        questionsPerExam:
            type: integer
        timeLimit:
            type: integer
        questions:
          type: array
          items:
            $ref: "#/components/schemas/CreateQuestionDTO"

    AttemptDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        examId:
          type: integer
          format: int64
        attemptDate:
          type: string
          format: date-time
        score:
          type: integer

    CreateQuestionDTO:
      type: object
      properties:
        content:
          type: string
        examId:
          type: integer
          format: int64
        score:
          type: integer
        type:
          type: string
          enum:
            - MULTIPLE_CHOICE
            - SINGLE_CHOICE
        answers:
          type: array
          items:
            $ref: "#/components/schemas/CreateAnswerDTO"

    CreateAnswerDTO:
      type: object
      properties:
        text:
          type: string
        isCorrect:
          type: boolean